# -*- coding: utf-8 -*-
"""knapsack_greedy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10GGPDh_N10Ze17ELjuqsZUU4IVqNbJLx

#Knapsack problem using greedy method
# Structure for an item which stores weight and
# corresponding value of Item
"""

class Item:
    def __init__(self, value, weight):
        self.value = value
        self.weight = weight
def Knapsack(W, arr):
    arr.sort(key=lambda x: (x.value/x.weight), reverse=True)   
    finalvalue = 0.0
    for item in arr:
        if item.weight <= W:
            W -= item.weight
            finalvalue += item.value
            finalvalue += item.value * W / item.weight
            break   
    # Returning final value
    return finalvalue
# Driver Code
if __name__ == "__main__":
    W = 80
    arr = [Item(30, 20), Item(100, 50), Item(80, 30)]
    # Function call
    max_val = Knapsack(W, arr)
    print(max_val)

