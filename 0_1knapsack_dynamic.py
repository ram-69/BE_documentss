# -*- coding: utf-8 -*-
"""0-1knapsack_dynamic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UH2mznxp2UH8hiv48g9_RFmtWsNmTo6Y
"""

n= int(input("Enter the no. of items: "))
p=list(map(int,input("Enter the profits of items: ").split()))
w=list(map(int,input("Enter the weights of items: ").split()))
m= int(input("Enter the capacity: "))

def knapSack(W, wt, val, n):
    stack = [[0 for x in range(W + 1)] for x in range(n + 1)]
  
    # Build table stack[][] in bottom up manner
    for i in range(n + 1):
        for w in range(W + 1):
            if i == 0 or w == 0:
                stack[i][w] = 0
            elif wt[i-1] <= w:
                stack[i][w] = max(val[i-1] + stack[i-1][w-wt[i-1]],  stack[i-1][w])
            else:
                stack[i][w] = stack[i-1][w]
  
    return stack[n][W]

knapSack(m,w,p,n)

