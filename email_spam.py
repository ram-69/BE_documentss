# -*- coding: utf-8 -*-
"""email_spam.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pYVAWyjoCUO5IDSUe5H37Uli63md6SJp
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
import warnings
warnings.filterwarnings('ignore')
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn import metrics

df=pd.read_csv('/content/emails.csv',error_bad_lines=False)

df.head(50)

df.dropna(inplace=True)

df.drop(['Email No.'],axis=1,inplace=True)
X = df.drop(['Prediction'],axis = 1)
Y = df['Prediction']

from sklearn.preprocessing import scale
X = scale(X)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, random_state=0)

X_train.shape

from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.transform(X_test)

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier()

knn.fit(X_train, Y_train)
Y_pred = knn.predict(X_test)

print("Prediction",Y_pred)

print("KNN accuracy: ",metrics.accuracy_score(Y_test,Y_pred))

print("Confusion matrix",metrics.confusion_matrix(Y_test,Y_pred))

# SVM
#cost C = 1
model = SVC(C = 1)

#fit
model.fit(X_train, Y_train)
SVC(C=1)

#predict
Y_pred = model.predict(X_test)

metrics.confusion_matrix(y_true=Y_test, y_pred=Y_pred)

print("SVM accuracy: ",metrics.accuracy_score(Y_test,Y_pred))